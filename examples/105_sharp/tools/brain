#!/usr/bin/env python3

import numpy
import sys
import os
import mmap
import functools
import operator
import adv

me = "ellipse"
b = 16
dtype = numpy.dtype("uint16")
path = "a"
raw = path + ".raw"
xmf = path + ".xmf"
base = os.path.basename(path)
atlas = "/u/ann.nrrd"
sx = sy = sz = 8
a = adv.nrrd_data(atlas).copy()
a = a[::sx, ::sy, ::sz]
nx, ny, nz = a.shape
nx = (nx)//b*b
ny = (ny)//b*b
nz = (nz)//b*b
a = a[:nx, :ny, :nz]
a[a != 0] = 1
print(a.shape)
u = adv.mmap_create(raw, dtype, a.shape)
numpy.copyto(u, a)

with open(xmf, "w") as f:
    nx, ny, nz = u.shape
    type = {numpy.dtype('float32') : "Float",
            numpy.dtype('uint16') : "UShort",
            numpy.dtype('int64') : "Int"}[u.dtype]
    f.write("""<?xml version="1.0" ?>
<!DOCTYPE Xdmf SYSTEM "Xdmf.dtd" []>
<Xdmf Version="2.0">
 <Domain>
   <Grid Name="mesh" GridType="Uniform">
     <Topology TopologyType="3DCORECTMesh" Dimensions="%d %d %d"/>
     <Geometry GeometryType="ORIGIN_DXDYDZ">
       <DataItem Name="Origin" Dimensions="3" NumberType="Float" Precision="8" Format="XML">
         0 0 0
       </DataItem>
       <DataItem Name="Spacing" Dimensions="3" NumberType="Float" Precision="8" Format="XML">
         1 1 1
       </DataItem>
     </Geometry>
     <Attribute Name="u" AttributeType="Scalar" Center="Cell">
       <DataItem ItemType="HyperSlab" Dimensions="%d %d %d" Type="HyperSlab">
           <DataItem Dimensions="3 3" Format="XML">
             0 0 0
             1 1 1
             %d %d %d
           </DataItem>
           <DataItem Dimensions="%d %d %d" Seek="0" Precision="2" NumberType="%s" Format="Binary">
             %s
           </DataItem>
       </DataItem>
     </Attribute>
   </Grid>
 </Domain>
</Xdmf>""" % (nz + 1, ny + 1, nx + 1, nz, ny, nx, nz, ny, nx, nz, ny, nx, type, base + ".raw"))
